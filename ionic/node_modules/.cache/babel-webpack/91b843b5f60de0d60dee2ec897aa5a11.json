{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isPlatformBrowser } from '@angular/common';\nimport { traceUntil as traceUntil$1, traceWhile as traceWhile$1, traceUntilComplete as traceUntilComplete$1, traceUntilFirst as traceUntilFirst$1 } from 'rxfire/performance';\nimport { getPerformance as getPerformance$1, initializePerformance as initializePerformance$1, trace as trace$1 } from 'firebase/performance';\nexport * from 'firebase/performance';\n\nclass Performance {\n  constructor(performance) {\n    return performance;\n  }\n\n}\n\nconst PERFORMANCE_PROVIDER_NAME = 'performance';\n\nclass PerformanceInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);\n  }\n\n}\n\nconst performanceInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME))), distinct());\nconst PROVIDED_PERFORMANCE_INSTANCES = new InjectionToken('angularfire2.performance-instances');\n\nfunction defaultPerformanceInstanceFactory(provided, defaultApp, // tslint:disable-next-line:ban-types\nplatform) {\n  if (!isPlatformBrowser(platform)) {\n    return null;\n  }\n\n  const defaultPerformance = ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);\n  return defaultPerformance && new Performance(defaultPerformance);\n}\n\nfunction performanceInstanceFactory(fn) {\n  // tslint:disable-next-line:ban-types\n  return (zone, platform, injector) => {\n    if (!isPlatformBrowser(platform)) {\n      return null;\n    }\n\n    const performance = zone.runOutsideAngular(() => fn(injector));\n    return new Performance(performance);\n  };\n}\n\nconst PERFORMANCE_INSTANCES_PROVIDER = {\n  provide: PerformanceInstances,\n  deps: [[new Optional(), PROVIDED_PERFORMANCE_INSTANCES]]\n};\nconst DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {\n  provide: Performance,\n  useFactory: defaultPerformanceInstanceFactory,\n  deps: [[new Optional(), PROVIDED_PERFORMANCE_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\n\nclass PerformanceModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'perf');\n  }\n\n}\n\nPerformanceModule.ɵfac = function PerformanceModule_Factory(t) {\n  return new (t || PerformanceModule)();\n};\n\nPerformanceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PerformanceModule\n});\nPerformanceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_PERFORMANCE_INSTANCE_PROVIDER, PERFORMANCE_INSTANCES_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PerformanceModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_PERFORMANCE_INSTANCE_PROVIDER, PERFORMANCE_INSTANCES_PROVIDER]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction providePerformance(fn, ...deps) {\n  return {\n    ngModule: PerformanceModule,\n    providers: [{\n      provide: PROVIDED_PERFORMANCE_INSTANCES,\n      useFactory: performanceInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, PLATFORM_ID, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst traceUntil = ɵzoneWrap(traceUntil$1, true);\nconst traceWhile = ɵzoneWrap(traceWhile$1, true);\nconst traceUntilComplete = ɵzoneWrap(traceUntilComplete$1, true);\nconst traceUntilFirst = ɵzoneWrap(traceUntilFirst$1, true); // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\nconst getPerformance = ɵzoneWrap(getPerformance$1, true);\nconst initializePerformance = ɵzoneWrap(initializePerformance$1, true);\nconst trace = ɵzoneWrap(trace$1, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Performance, PerformanceInstances, PerformanceModule, getPerformance, initializePerformance, performanceInstance$, providePerformance, trace, traceUntil, traceUntilComplete, traceUntilFirst, traceWhile }; //# sourceMappingURL=angular-fire-performance.js.map","map":{"version":3,"sources":["C:/Users/dctutor/Desktop/MOBILE-SEMESTRE-2/dorset-team-3-ticketing/ionic/node_modules/@angular/fire/fesm2015/angular-fire-performance.js"],"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","VERSION","ɵAngularFireSchedulers","ɵzoneWrap","timer","from","concatMap","distinct","i0","InjectionToken","Optional","PLATFORM_ID","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","isPlatformBrowser","traceUntil","traceUntil$1","traceWhile","traceWhile$1","traceUntilComplete","traceUntilComplete$1","traceUntilFirst","traceUntilFirst$1","getPerformance","getPerformance$1","initializePerformance","initializePerformance$1","trace","trace$1","Performance","constructor","performance","PERFORMANCE_PROVIDER_NAME","PerformanceInstances","performanceInstance$","pipe","PROVIDED_PERFORMANCE_INSTANCES","defaultPerformanceInstanceFactory","provided","defaultApp","platform","defaultPerformance","performanceInstanceFactory","fn","zone","injector","runOutsideAngular","PERFORMANCE_INSTANCES_PROVIDER","provide","deps","DEFAULT_PERFORMANCE_INSTANCE_PROVIDER","useFactory","PerformanceModule","full","ɵfac","ɵmod","ɵinj","type","args","providers","providePerformance","ngModule","multi"],"mappings":"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","sourcesContent":["import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isPlatformBrowser } from '@angular/common';\nimport { traceUntil as traceUntil$1, traceWhile as traceWhile$1, traceUntilComplete as traceUntilComplete$1, traceUntilFirst as traceUntilFirst$1 } from 'rxfire/performance';\nimport { getPerformance as getPerformance$1, initializePerformance as initializePerformance$1, trace as trace$1 } from 'firebase/performance';\nexport * from 'firebase/performance';\n\nclass Performance {\n    constructor(performance) {\n        return performance;\n    }\n}\nconst PERFORMANCE_PROVIDER_NAME = 'performance';\nclass PerformanceInstances {\n    constructor() {\n        return ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);\n    }\n}\nconst performanceInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_PERFORMANCE_INSTANCES = new InjectionToken('angularfire2.performance-instances');\nfunction defaultPerformanceInstanceFactory(provided, defaultApp, \n// tslint:disable-next-line:ban-types\nplatform) {\n    if (!isPlatformBrowser(platform)) {\n        return null;\n    }\n    const defaultPerformance = ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);\n    return defaultPerformance && new Performance(defaultPerformance);\n}\nfunction performanceInstanceFactory(fn) {\n    // tslint:disable-next-line:ban-types\n    return (zone, platform, injector) => {\n        if (!isPlatformBrowser(platform)) {\n            return null;\n        }\n        const performance = zone.runOutsideAngular(() => fn(injector));\n        return new Performance(performance);\n    };\n}\nconst PERFORMANCE_INSTANCES_PROVIDER = {\n    provide: PerformanceInstances,\n    deps: [\n        [new Optional(), PROVIDED_PERFORMANCE_INSTANCES],\n    ]\n};\nconst DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {\n    provide: Performance,\n    useFactory: defaultPerformanceInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_PERFORMANCE_INSTANCES],\n        FirebaseApp,\n        PLATFORM_ID,\n    ]\n};\nclass PerformanceModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'perf');\n    }\n}\nPerformanceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPerformanceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule });\nPerformanceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, providers: [\n        DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,\n        PERFORMANCE_INSTANCES_PROVIDER,\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,\n                        PERFORMANCE_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\nfunction providePerformance(fn, ...deps) {\n    return {\n        ngModule: PerformanceModule,\n        providers: [{\n                provide: PROVIDED_PERFORMANCE_INSTANCES,\n                useFactory: performanceInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    PLATFORM_ID,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst traceUntil = ɵzoneWrap(traceUntil$1, true);\nconst traceWhile = ɵzoneWrap(traceWhile$1, true);\nconst traceUntilComplete = ɵzoneWrap(traceUntilComplete$1, true);\nconst traceUntilFirst = ɵzoneWrap(traceUntilFirst$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getPerformance = ɵzoneWrap(getPerformance$1, true);\nconst initializePerformance = ɵzoneWrap(initializePerformance$1, true);\nconst trace = ɵzoneWrap(trace$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Performance, PerformanceInstances, PerformanceModule, getPerformance, initializePerformance, performanceInstance$, providePerformance, trace, traceUntil, traceUntilComplete, traceUntilFirst, traceWhile };\n//# sourceMappingURL=angular-fire-performance.js.map\n"]},"metadata":{},"sourceType":"module"}